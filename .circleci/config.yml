version: 2.1
executors:
  bash-env:
    machine:
      image: ubuntu-2004:202111-02

jobs:
  prep-bash:
    executor: bash-env
    steps:
      - restore_cache:
          keys:
            - programs-cache
      - run: 
          name: Download and Install Programs
          command: |
            pwd
            mkdir -p ./programs
            cd ./programs
            echo "export PATH=\$PATH:$PWD" >> $BASH_ENV
            if [ ! -f "./nextflow" ]; then
                curl -fsSL https://get.nextflow.io | bash
            else
                echo "Nextflow Found"
            fi
            if [ ! -f "./miniconda/condabin/conda" ]; then
                wget --progress=dot --retry-connrefused https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
                bash miniconda.sh -b -p ./miniconda
                source "miniconda/etc/profile.d/conda.sh"
                hash -r
                conda config --set always_yes yes --set changeps1 no
                conda update -q conda
                conda info -a
            else
                echo "Conda Found"
            fi
            export CONDA_PATH=$(dirname $(whereis conda | cut -d\  -f 2))
            whereis conda
            echo "Conda Path: $CONDA_PATH"
            echo "export PATH=\$PATH:$CONDA_PATH" >> $BASH_ENV
      - save_cache:
          key: programs-cache
          paths:
            - programs
      - persist_to_workspace:
          root: ./
          paths:
            - programs

  prep-data:
    executor: bash-env
    steps:
      - checkout
      - restore_cache:
          keys:
            - data2-cache
      - attach_workspace:
          at: ./
      - run:
          name: Re-initiate Environment
          command: |
            pwd
            cd ./programs
            ls
            echo "export PATH=\$PATH:$PWD" >> $BASH_ENV
            echo "export PATH=\$PATH:$PWD/miniconda/condabin/" >> $BASH_ENV
      - run:
          name: Setup Reference Data
          command: |
            echo "" ; ls ; echo ""
            cd ./test_pipe
            echo "" ; ls ; echo ""
            cat test_notes.txt
            ./setup_reference.sh
            ./dl_prep_data.sh
            echo "" ; ls subsampled_data ; echo ""
            echo "" ; ls test_reference ; echo ""
          
      - save_cache:
          key: data2-cache
          paths:
            - test_pipe/subsampled_data
            - test_pipe/test_reference
      - persist_to_workspace:
          root: ./
          paths:
            - test_pipe/subsampled_data
            - test_pipe/test_reference

  test-conda:
    executor: bash-env
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Re-initiate Environment
          command: |
            pwd
            cd ./programs
            ls
            echo "export PATH=\$PATH:$PWD" >> $BASH_ENV
            echo "export PATH=\$PATH:$PWD/miniconda/condabin/" >> $BASH_ENV
            cd ../test_pipe
            echo "test_reference:" ; ls test_reference ; echo ""
            echo "subsampled_data:" ; ls subsampled_data ; echo ""
      - run:
          name: Test Mode:Initiate
          environment: 
            NXF_ANSI_LOG: false
          command: |
            mkdir ./test_init
            cd    ./test_init
            nextflow run ../CnR-flow.nf --mode initiate
      - run:
          name: Test Mode:validate
          environment: 
            NXF_ANSI_LOG: false
          command: |
            cd    ./test_init
            nextflow run ../CnR-flow.nf --mode validate
      - run:
          name: Test Execution
          environment: 
            NXF_ANSI_LOG: false
          command: |
            cd ./test_pipe
            cat test_notes.txt
            echo "" ; ls test_reference ; echo ""
            echo "" ; ls subsampled_data ; echo ""
            nextflow ../CnR-flow.nf --verbose --mode prep_fasta
            echo "test_reference" ; ls test_reference ; echo ""
            echo "test_reference/*" ; ls test_reference/*/* ; echo ""
            nextflow ../CnR-flow.nf --verbose --mode run
            cat $(find ./cnr_output/logs/* -maxdepth 0 | sort )
            cp nextflow.config.step2 nextflow.config
            nextflow ../CnR-flow.nf -resume --verbose --mode run

  test-docker:
    executor: bash-env
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Re-initiate Environment
          command: |
            pwd
            cd ./programs
            ls
            echo "export PATH=\$PATH:$PWD" >> $BASH_ENV
            echo "export PATH=\$PATH:$PWD/miniconda/condabin/" >> $BASH_ENV
            cd ../test_pipe
            echo "test_reference" ; ls test_reference ; echo ""
            echo "subsampled_data" ; ls subsampled_data ; echo ""
      - run:
          name: Test Mode:Initiate
          environment: 
            NXF_ANSI_LOG: false
          command: |
            mkdir ./test_init
            cd    ./test_init
            nextflow run ../CnR-flow.nf --mode initiate
            cat ../test_pipe/nextflow.config.docker
            cat ../test_pipe/nextflow.config.docker >> nextflow.config
      - run:
          name: Test Mode:validate
          environment: 
            NXF_ANSI_LOG: false
          command: |
            cd    ./test_init
            nextflow run ../CnR-flow.nf --mode validate
      - run:
          name: Test Execution
          environment: 
            NXF_ANSI_LOG: false
          command: |
            cd ./test_pipe
            cat test_notes.txt
            cat nextflow.config.docker >> nextflow.config
            echo "" ; ls test_reference ; echo ""
            echo "" ; ls subsampled_data ; echo ""
            nextflow ../CnR-flow.nf --verbose --mode prep_fasta
            echo "test_reference" ; ls test_reference ; echo ""
            echo "test_reference/*" ; ls test_reference/*/* ; echo ""
            nextflow ../CnR-flow.nf --verbose --mode run
            cat $(find ./cnr_output/logs/* -maxdepth 0 | sort )
            cp nextflow.config.step2 nextflow.config
            cat nextflow.config.docker >> nextflow.config
            nextflow ../CnR-flow.nf -resume --verbose --mode run

workflows:
  test-bash:
      jobs:
        - prep-bash
        - prep-data:
            requires:
              - prep-bash
        - test-conda:
            requires:
              - prep-data
        - test-docker:
            requires:
              - prep-data
